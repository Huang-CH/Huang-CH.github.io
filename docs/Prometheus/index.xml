<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prometheus on 黄 超 | H&amp;C</title>
    <link>https://Huang-CH.github.io/docs/Prometheus/</link>
    <description>Recent content in Prometheus on 黄 超 | H&amp;C</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://Huang-CH.github.io/docs/Prometheus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://Huang-CH.github.io/docs/Prometheus/Prometheus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Huang-CH.github.io/docs/Prometheus/Prometheus/</guid>
      <description>title: Prometheus
 Prometheus简介#  官方网站：https://prometheus.io
  Prometheus 是一个开源系统，最初是在 SoundCloud 上构建的监控和警报工具包。自2012年成立以来，许多公司和组织都采用了Prometheus，该项目具有非常活跃的开发人员和用户社区。它现在是一个独立的开源项目，并独立于任何公司进行维护。强调这一点，并澄清该项目的治理结构，Prometheus于2016年加入云原生计算基金会 作为继 Kubernetes 之后的第二个托管项目。
Prometheus 将所有采集到的样本（sample）以时间序列的方式保存在时序数据库中。
样本（sample）由指标（metric）、时间戳（timestamp）、样本值（value）组成。
指标（metric）包含四种类型：
 官网链接：https://prometheus.io/docs/concepts/metric_types/#metric-types
   Counter：Counter（计数器）是一个累积型的指标，其值只能增加或重置为零。例如，可以使用Counter来记录开机时间、CPU使用时间、网络请求总数量。特点是描述“只增不减”的数据类型。
注意：不要使用Counter来暴露可以减少的值。例如，不要对当前正在运行的进程数量使用Counter；而是使用Gauge（仪表）。
 计数器的客户端库使用文档：
 Go Java Python Ruby .Net     Gauge：Gauge（传感器）是一个可以表示任意上下起伏数值的指标，其返回值是一个瞬时状态。例如：温度、当前内存可用容量、硬盘可用容量。特点是描述“可增可减”的数据类型。
 Gauge的客户端库使用文档：
 Go Java Python Ruby .Net     Histogram：Histogram（直方图）是一个统计分析数据分布情况的指标。该指标对观测结果进行采样（通常如请求持续时间或响应大小），并在可配置的buckets中计数。它还提供了所有观察到的值的总和。该指标的对于不同区间样本个数的计算是在服务端完成的。
Histogram的基本度量名称为&amp;lt;basename&amp;gt;，在刮擦期间暴露了多个时间序列：
观察buckets的累积计数器，暴露为&amp;lt;basename&amp;gt;_bucket{le=&amp;quot;&amp;lt;upper inclusive bound&amp;gt;&amp;quot;}</description>
    </item>
    
  </channel>
</rss>
